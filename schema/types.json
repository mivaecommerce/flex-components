{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "anyOf": [
        {
            "$ref": "#/definitions/FlexComponentTypeLibrary"
        },
        {
            "$ref": "#/definitions/FlexComponentTypeComponent"
        }
    ],
    "definitions": {
        "AdditionalTextSettings": {
            "description": "Additional settings that are applied to existing {@link Property} objects to control functionality specific to the {@link TextSetting} items in {@link TextSettings}",
            "properties": {
                "pseudoclasses": {
                    "description": "An array of strings used to designate the various states the text setting property should be able to be configured by.\n\nEach item in the array will create a tab & structure with its own set of property data. It is not necessary to have multiple states.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "size": {
                    "default": "'full'",
                    "description": "Controls the width of the property",
                    "enum": [
                        "full",
                        "half",
                        "one-third",
                        "two-thirds"
                    ],
                    "type": "string"
                },
                "style": {
                    "description": "Used to indicate you want CSS styles to be generated by flex (ex. font-size, color, background-color, etc.)",
                    "type": "string"
                },
                "style_prefix": {
                    "description": "A string to prefix to the output of the value the user provides. Only applies when `style` is also used. Could be used to output the \"calc(\" of a CSS property value",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "style_suffix": {
                    "description": "A string to suffix to the output of the value the user provides. Only applies when `style` is also used. Could be used to output the \"px\" of a CSS property value",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "type": "object"
        },
        "CategoryProperty": {
            "description": "Category look-up input",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "category"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CheckboxProperty": {
            "description": "Checkbox input\n\nSimilar to <input type=\"checkbox\">",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "checkbox"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ColorProperty": {
            "description": "Color input\n\nSimilar to <input type=\"color\">",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "color"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DateProperty": {
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "serverdate": {
                    "description": "A boolean-like value",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "date",
                        "datetime"
                    ],
                    "type": "string"
                },
                "validation_message": {
                    "type": "string"
                },
                "validation_pattern": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DistributedSliderProperty": {
            "description": "Distributed Slider input\n\nSimilar to <input type=\"range\">, but ideal for ranges from 0-100 (i.e widths & percentages)",
            "properties": {
                "breaks": {
                    "description": "The breakpoints are calculated as a value between 0 and 100 steps divided by the number of breaks",
                    "type": "number"
                },
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "distributedslider"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FlexComponentImages": {
            "description": "An object used in {@link FlexComponent.images} mapping the source-file within the tar.bz2 to the desired destination-file on the server. Upon install of the flex component into a store, any images defined will get copied to the destination path specified.\n\nThe default location for images on a Miva store is something like: \"graphics/%STORE_ID%/image_name.jpg\". A common use case for this could be including placeholder images for your component into the flex component file that gets imported.",
            "properties": {
                "destination_filepath": {
                    "description": "The destination_filepath is where you would like the image copied on the Miva server.\n\nThere is an optional %STORE_ID% placeholder value you can use in the destination path which will get replaced with the actual store id (ex: 00000001) upon import",
                    "type": "string"
                },
                "source_filepath": {
                    "description": "The source_filepath is the path of the image in the local flex folder (.tar.bz2).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FlexComponentResource": {
            "description": "An object detailing the filepath, resource_code, and attributes[] of a CSS or JavaScript Resource that your Flex Component relies on.\n\nTypically used in {@link FlexComponent.scripts} and {@link FlexComponent.styles}",
            "properties": {
                "attributes": {
                    "description": "An array of {@link HtmlAttribute} objects defining the name & value of any attributes that should be output on the JS/CSS resource",
                    "items": {
                        "$ref": "#/definitions/HtmlAttribute"
                    },
                    "type": "array"
                },
                "filepath": {
                    "description": "The path of the JavaScript/CSS Resource in the local flex folder (i.e. .tar.bz2)",
                    "type": "string"
                },
                "resource_code": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FlexComponentTypeComponent": {
            "properties": {
                "advanced_properties": {
                    "description": "Array of JSON objects for the properties that will appear in the advanced tab",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Group"
                            },
                            {
                                "$ref": "#/definitions/TextProperty"
                            },
                            {
                                "$ref": "#/definitions/NumberProperty"
                            },
                            {
                                "$ref": "#/definitions/DateProperty"
                            },
                            {
                                "$ref": "#/definitions/TextAreaProperty"
                            },
                            {
                                "$ref": "#/definitions/SelectProperty"
                            },
                            {
                                "$ref": "#/definitions/RadioProperty"
                            },
                            {
                                "$ref": "#/definitions/ColorProperty"
                            },
                            {
                                "$ref": "#/definitions/CheckboxProperty"
                            },
                            {
                                "$ref": "#/definitions/SelectorProperty"
                            },
                            {
                                "$ref": "#/definitions/ImageProperty"
                            },
                            {
                                "$ref": "#/definitions/CategoryProperty"
                            },
                            {
                                "$ref": "#/definitions/ProductProperty"
                            },
                            {
                                "$ref": "#/definitions/LinkProperty"
                            },
                            {
                                "$ref": "#/definitions/SliderProperty"
                            },
                            {
                                "$ref": "#/definitions/DistributedSliderProperty"
                            },
                            {
                                "$ref": "#/definitions/ListProperty"
                            },
                            {
                                "$ref": "#/definitions/GroupListProperty"
                            },
                            {
                                "$ref": "#/definitions/TextEditorProperty"
                            }
                        ]
                    },
                    "type": "array"
                },
                "category": {
                    "description": "This is used to categorize the component in Page Builder and determines which icon is shown next to the component's name in Page Builder",
                    "enum": [
                        "category-carousel",
                        "featured-product",
                        "image",
                        "image-across",
                        "image-slider",
                        "image-text",
                        "non-element",
                        "product-carousel",
                        "text-area",
                        "text-banner",
                        "text-editor",
                        "text-utility",
                        "video"
                    ],
                    "type": "string"
                },
                "code": {
                    "description": "The flex component code",
                    "type": "string"
                },
                "conflicts": {
                    "additionalProperties": true,
                    "description": "Object where the key is a Component's Code and value is the Version number with an optional leading >, >=, <, <=, ex: \"mmx-base\": \">=10.07.00\"",
                    "properties": {},
                    "type": "object"
                },
                "defaults": {
                    "additionalProperties": true,
                    "description": "Object containing the default values for all properties",
                    "properties": {},
                    "type": "object"
                },
                "depends": {
                    "additionalProperties": true,
                    "description": "Object where the key is a Component's Code and value is the Version number with an optional leading >, >=, <, <=, ex:\"mmx-base\": \">=10.07.00\"",
                    "properties": {},
                    "type": "object"
                },
                "images": {
                    "description": "Array of {@link FlexComponentImages} that allows you to include images in your component that will get added to the server/store upon import.",
                    "items": {
                        "$ref": "#/definitions/FlexComponentImages"
                    },
                    "type": "array"
                },
                "initialization_template": {
                    "description": "Path to the initialization template. This is a .mvt text file that can contain Miva template logic.",
                    "type": "string"
                },
                "instance_template": {
                    "description": "Path to the instance template. This is a .mvt text file that can contain Miva template logic.",
                    "type": "string"
                },
                "managed": {
                    "description": "Boolean to indicate if the JS/CSS Resources should be module managed resources or not.\n   managed: true - Users *cannot* modify or delete the CSS/JS Resources of the Flex Component.\n   managed: false - Users *can* modify or delete the CSS/JS Resources of the Flex Component\n   default is true",
                    "type": "boolean"
                },
                "name": {
                    "description": "The flex component name",
                    "type": "string"
                },
                "preview": {
                    "description": "The flex component's preview image. Should be the XML source of an SVG file",
                    "type": "string"
                },
                "properties": {
                    "description": "Array of JSON objects for the properties the component will provide in admin for the end user",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Group"
                            },
                            {
                                "$ref": "#/definitions/TextProperty"
                            },
                            {
                                "$ref": "#/definitions/NumberProperty"
                            },
                            {
                                "$ref": "#/definitions/DateProperty"
                            },
                            {
                                "$ref": "#/definitions/TextAreaProperty"
                            },
                            {
                                "$ref": "#/definitions/SelectProperty"
                            },
                            {
                                "$ref": "#/definitions/RadioProperty"
                            },
                            {
                                "$ref": "#/definitions/ColorProperty"
                            },
                            {
                                "$ref": "#/definitions/CheckboxProperty"
                            },
                            {
                                "$ref": "#/definitions/SelectorProperty"
                            },
                            {
                                "$ref": "#/definitions/ImageProperty"
                            },
                            {
                                "$ref": "#/definitions/CategoryProperty"
                            },
                            {
                                "$ref": "#/definitions/ProductProperty"
                            },
                            {
                                "$ref": "#/definitions/LinkProperty"
                            },
                            {
                                "$ref": "#/definitions/SliderProperty"
                            },
                            {
                                "$ref": "#/definitions/DistributedSliderProperty"
                            },
                            {
                                "$ref": "#/definitions/ListProperty"
                            },
                            {
                                "$ref": "#/definitions/GroupListProperty"
                            },
                            {
                                "$ref": "#/definitions/TextEditorProperty"
                            }
                        ]
                    },
                    "type": "array"
                },
                "resourcegroup_code": {
                    "description": "This is the Miva resource group the CSS/JS will get output from.",
                    "type": "string"
                },
                "scripts": {
                    "description": "Array of {@link FlexComponentResource} objects for the JavaScript Resources that the component should create",
                    "items": {
                        "$ref": "#/definitions/FlexComponentResource"
                    },
                    "type": "array"
                },
                "styles": {
                    "description": "Array of {@link FlexComponentResource} objects for the CSS Resources that the component should create",
                    "items": {
                        "$ref": "#/definitions/FlexComponentResource"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Indicate the scope & capabilities of the flex component.\n   type: 'component' = The flex component will be exposed in Page Builder UI's component selector. Supports all capabilities: properties, advanced_properties, images,  scripts, styles, initialization_template, and instance_template.\n   type: 'library' = The flex component will not be exposed in the Page Builder UI's component selector. Mainly supports scripts & styles capabilities.\n   default is 'component'",
                    "enum": [
                        "component"
                    ],
                    "type": "string"
                },
                "version": {
                    "description": "The flex version number (ex. 1.0.0)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FlexComponentTypeLibrary": {
            "properties": {
                "code": {
                    "description": "The flex component code",
                    "type": "string"
                },
                "conflicts": {
                    "additionalProperties": true,
                    "description": "Object where the key is a Component's Code and value is the Version number with an optional leading >, >=, <, <=, ex: \"mmx-base\": \">=10.07.00\"",
                    "properties": {},
                    "type": "object"
                },
                "depends": {
                    "additionalProperties": true,
                    "description": "Object where the key is a Component's Code and value is the Version number with an optional leading >, >=, <, <=, ex:\"mmx-base\": \">=10.07.00\"",
                    "properties": {},
                    "type": "object"
                },
                "images": {
                    "description": "Array of {@link FlexComponentImages} that allows you to include images in your component that will get added to the server/store upon import.",
                    "items": {
                        "$ref": "#/definitions/FlexComponentImages"
                    },
                    "type": "array"
                },
                "managed": {
                    "description": "Boolean to indicate if the JS/CSS Resources should be module managed resources or not.\n   managed: true - Users *cannot* modify or delete the CSS/JS Resources of the Flex Component.\n   managed: false - Users *can* modify or delete the CSS/JS Resources of the Flex Component\n   default is true",
                    "type": "boolean"
                },
                "name": {
                    "description": "The flex component name",
                    "type": "string"
                },
                "resourcegroup_code": {
                    "description": "This is the Miva resource group the CSS/JS will get output from.",
                    "type": "string"
                },
                "scripts": {
                    "description": "Array of {@link FlexComponentResource} objects for the JavaScript Resources that the component should create",
                    "items": {
                        "$ref": "#/definitions/FlexComponentResource"
                    },
                    "type": "array"
                },
                "styles": {
                    "description": "Array of {@link FlexComponentResource} objects for the CSS Resources that the component should create",
                    "items": {
                        "$ref": "#/definitions/FlexComponentResource"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Indicate the scope & capabilities of the flex component.\n   type: 'component' = The flex component will be exposed in Page Builder UI's component selector. Supports all capabilities: properties, advanced_properties, images,  scripts, styles, initialization_template, and instance_template.\n   type: 'library' = The flex component will not be exposed in the Page Builder UI's component selector. Mainly supports scripts & styles capabilities.\n   default is 'component'",
                    "enum": [
                        "library"
                    ],
                    "type": "string"
                },
                "version": {
                    "description": "The flex version number (ex. 1.0.0)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Group": {
            "description": "A group is just a container for other properties and a way to organize the properties on the screen logically and into nested groups.\n\nA group is collapsible and can have an optionally enable/disable the ability to toggle it on/off",
            "properties": {
                "can_disable": {
                    "description": "A boolean-like value",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "code": {
                    "type": "string"
                },
                "collapsed": {
                    "description": "A boolean-like value",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "prompt": {
                    "type": "string"
                },
                "properties": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Group"
                            },
                            {
                                "$ref": "#/definitions/TextProperty"
                            },
                            {
                                "$ref": "#/definitions/NumberProperty"
                            },
                            {
                                "$ref": "#/definitions/DateProperty"
                            },
                            {
                                "$ref": "#/definitions/TextAreaProperty"
                            },
                            {
                                "$ref": "#/definitions/SelectProperty"
                            },
                            {
                                "$ref": "#/definitions/RadioProperty"
                            },
                            {
                                "$ref": "#/definitions/ColorProperty"
                            },
                            {
                                "$ref": "#/definitions/CheckboxProperty"
                            },
                            {
                                "$ref": "#/definitions/SelectorProperty"
                            },
                            {
                                "$ref": "#/definitions/ImageProperty"
                            },
                            {
                                "$ref": "#/definitions/CategoryProperty"
                            },
                            {
                                "$ref": "#/definitions/ProductProperty"
                            },
                            {
                                "$ref": "#/definitions/LinkProperty"
                            },
                            {
                                "$ref": "#/definitions/SliderProperty"
                            },
                            {
                                "$ref": "#/definitions/DistributedSliderProperty"
                            },
                            {
                                "$ref": "#/definitions/ListProperty"
                            },
                            {
                                "$ref": "#/definitions/GroupListProperty"
                            },
                            {
                                "$ref": "#/definitions/TextEditorProperty"
                            }
                        ]
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "group"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupListProperty": {
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "item_prompt_property": {
                    "description": "used to tell the outer list what property to use for the display (ie, you change this field in the inner group, set the title of the list entry to that value)",
                    "type": "string"
                },
                "list_type": {
                    "enum": [
                        "group"
                    ],
                    "type": "string"
                },
                "max_count": {
                    "description": "maximum amount of items that must exist in the list",
                    "type": "number"
                },
                "min_count": {
                    "description": "minimum amount of items that must exist in the list",
                    "type": "number"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "properties": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Group"
                            },
                            {
                                "$ref": "#/definitions/TextProperty"
                            },
                            {
                                "$ref": "#/definitions/NumberProperty"
                            },
                            {
                                "$ref": "#/definitions/DateProperty"
                            },
                            {
                                "$ref": "#/definitions/TextAreaProperty"
                            },
                            {
                                "$ref": "#/definitions/SelectProperty"
                            },
                            {
                                "$ref": "#/definitions/RadioProperty"
                            },
                            {
                                "$ref": "#/definitions/ColorProperty"
                            },
                            {
                                "$ref": "#/definitions/CheckboxProperty"
                            },
                            {
                                "$ref": "#/definitions/SelectorProperty"
                            },
                            {
                                "$ref": "#/definitions/ImageProperty"
                            },
                            {
                                "$ref": "#/definitions/CategoryProperty"
                            },
                            {
                                "$ref": "#/definitions/ProductProperty"
                            },
                            {
                                "$ref": "#/definitions/LinkProperty"
                            },
                            {
                                "$ref": "#/definitions/SliderProperty"
                            },
                            {
                                "$ref": "#/definitions/DistributedSliderProperty"
                            },
                            {
                                "$ref": "#/definitions/ListProperty"
                            },
                            {
                                "$ref": "#/definitions/GroupListProperty"
                            },
                            {
                                "$ref": "#/definitions/TextEditorProperty"
                            }
                        ]
                    },
                    "type": "array"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "template": {
                    "additionalProperties": true,
                    "description": "defines the default value the \"Add New\" link is clicked.",
                    "properties": {},
                    "type": "object"
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "list"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HtmlAttribute": {
            "description": "An object depicting the HTML attribute name & value pair",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "type": "object"
        },
        "ImageProperty": {
            "description": "Image input allows users to upload or find any image in Miva's Image Management",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "responsive_images": {
                    "items": {
                        "$ref": "#/definitions/ResponsiveImage"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "image"
                    ],
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "LinkProperty": {
            "description": "Link input allows users to link to any product, category, or page",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "default_type": {
                    "enum": [
                        "category",
                        "page",
                        "product"
                    ],
                    "type": "string"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "link"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListProperty": {
            "description": "List properties allow you to create list of other properties that can be added or removed by the end user. An example would be a list of images used for a hero slider.",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "list_type": {
                    "enum": [
                        "category",
                        "color",
                        "date",
                        "datetime",
                        "group",
                        "image",
                        "product",
                        "text"
                    ],
                    "type": "string"
                },
                "max_count": {
                    "description": "maximum amount of items that must exist in the list",
                    "type": "number"
                },
                "min_count": {
                    "description": "minimum amount of items that must exist in the list",
                    "type": "number"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "template": {
                    "additionalProperties": true,
                    "description": "defines the default value the \"Add New\" link is clicked.",
                    "properties": {},
                    "type": "object"
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "list"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MivaIcons": {
            "description": "A list of the possible Miva Icon options.\n\nMainly used in {@link SelectorOption.text} values",
            "enum": [
                "actions",
                "add",
                "addressbook",
                "advancedsearch",
                "align_center",
                "align_justify",
                "align_left",
                "align_right",
                "arrowdown",
                "arrowup",
                "assign",
                "backgroundcolor",
                "bar_sbs",
                "bar_stacked",
                "bold",
                "bookmark",
                "border",
                "branches",
                "bseparator",
                "bulletlist",
                "businessaccount",
                "cancel",
                "catalog",
                "cell",
                "changesort",
                "checkmark",
                "circle",
                "circle_add",
                "circle_cancel",
                "circle_checkmark",
                "circle_information",
                "code",
                "colorpicker",
                "columnmenu",
                "columnresize",
                "columns",
                "conditions",
                "copy",
                "createnew",
                "customer_dashboard_address",
                "customer_dashboard_businessaccount",
                "customer_dashboard_email",
                "customer_dashboard_login",
                "customer_dashboard_password",
                "customer_dashboard_phone",
                "customers",
                "datamanagement",
                "date",
                "delete",
                "details",
                "dismiss",
                "disp_order",
                "domainsettings",
                "download",
                "dropdown",
                "edit",
                "email",
                "exclamation",
                "export",
                "fielderror",
                "filter",
                "find_and_replace",
                "findinlist",
                "first",
                "folder",
                "font",
                "fontface",
                "fontsize",
                "foregroundcolor",
                "fullscreen_end",
                "fullscreen_start",
                "gear_1",
                "goto",
                "group",
                "help",
                "here",
                "history",
                "home",
                "horizontalalign",
                "import",
                "indent",
                "italic",
                "last",
                "line_stacked",
                "linenumbers",
                "link",
                "link_ext_alt",
                "linked",
                "list",
                "loading",
                "lock",
                "logging",
                "login",
                "logout",
                "lookup",
                "manageshipments",
                "marketing",
                "marketplaces",
                "menu",
                "miva_m",
                "modules",
                "more",
                "next",
                "notification",
                "numberedlist",
                "orderfulfillment",
                "orderprocessing",
                "outdent",
                "paint",
                "paragraph",
                "password",
                "payment",
                "picture",
                "position_bottom_left",
                "position_bottom_right",
                "position_top_left",
                "position_top_right",
                "prev",
                "readytheme",
                "redo",
                "refresh",
                "reports",
                "requestsupport",
                "reset",
                "resize",
                "revision",
                "richtext",
                "rows",
                "save",
                "search",
                "settings",
                "shopascustomer",
                "show",
                "sort",
                "sort_asc",
                "sort_desc",
                "star",
                "storesettings",
                "strike",
                "subscript",
                "superscript",
                "systemextensions",
                "table",
                "tags",
                "template_add",
                "textarea",
                "time",
                "triggers",
                "unassign",
                "underline",
                "undo",
                "ungroup",
                "unlock",
                "update_available",
                "upload",
                "urimanagement",
                "userinterface",
                "users",
                "utilities",
                "verticalalign",
                "viewstore",
                "workflow",
                "wrap",
                "zoom_in",
                "zoom_out"
            ],
            "type": "string"
        },
        "NumberProperty": {
            "description": "Number input property\n\nSimilar to <input type=\"number\">",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "label": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                },
                "placeholder": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "step": {
                    "type": "number"
                },
                "text_type": {
                    "enum": [
                        "number"
                    ],
                    "type": "string"
                },
                "textsettings": {
                    "$ref": "#/definitions/TextSettings"
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "text"
                    ],
                    "type": "string"
                },
                "validation_message": {
                    "type": "string"
                },
                "validation_pattern": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Option": {
            "description": "Option of a {@link SelectProperty}, {@link RadioProperty}, or {@link SelectorProperty}\n\nSimilar to <option>",
            "properties": {
                "text": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "value": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "type": "object"
        },
        "ProductProperty": {
            "description": "Product look-up input",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "product"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RadioProperty": {
            "description": "Radio input\n\nSimilar to <input type=\"radio\">",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "options": {
                    "items": {
                        "$ref": "#/definitions/Option"
                    },
                    "type": "array"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "radio"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResponsiveImage": {
            "description": "An object used in {@link ImageProperty.responsive_images} arrays to designate slots for people to upload additional images.\n\nEspecially helpful for designating images in <picture> and <source> elements that target specific media/devices",
            "properties": {
                "code": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "prompt": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "SelectProperty": {
            "description": "Select input\n\nSimilar to <select>",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "options": {
                    "items": {
                        "$ref": "#/definitions/Option"
                    },
                    "type": "array"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "select"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SelectorOption": {
            "description": "Special version of an {@link Option} used on {@link SelectorProperty} that allows you to show an icon from the {@link MivaIcons} set",
            "properties": {
                "text": {
                    "$ref": "#/definitions/MivaIcons"
                },
                "type": {
                    "enum": [
                        "icon"
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "type": "object"
        },
        "SelectorProperty": {
            "description": "Selector input\n\nSimilar to a Bootstrap's \"Button Group\" or \"Radio Toggle Button\"",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "options": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Option"
                            },
                            {
                                "$ref": "#/definitions/SelectorOption"
                            }
                        ]
                    },
                    "type": "array"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "selector"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SliderProperty": {
            "description": "Slider input\n\nSimilar to <input type=\"range\">",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "label": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "precision": {
                    "description": "use -1 to use default precision",
                    "type": "number"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "range_high": {
                    "type": "number"
                },
                "range_low": {
                    "type": "number"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "scale": {
                    "description": "use -1 to use default scale",
                    "type": "number"
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "slider"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TextAreaProperty": {
            "description": "Text Area input property\n\nSimilar to <textarea>",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "placeholder": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "textsettings": {
                    "$ref": "#/definitions/TextSettings"
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "textarea"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TextEditorProperty": {
            "description": "Text Editor input\n\nA property that launches a [Miva Rich Text Editor input](https://docs.miva.com/how-to-guides/rich-text-editor) in a modal.",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "texteditor"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TextProperty": {
            "description": "Text input property\n\nSimilar to <input type=\"text|url|password|tel\">",
            "properties": {
                "code": {
                    "description": "This is the unique code that identifies the property",
                    "type": "string"
                },
                "label": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "maxlength": {
                    "type": "number"
                },
                "minlength": {
                    "type": "number"
                },
                "placeholder": {
                    "description": "A general value of a property",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "prompt": {
                    "description": "This is the text the end user will see in the Miva admin for this property",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "Designate if the property should be required by the user when editing through Page Builder's UI",
                    "enum": [
                        0,
                        1,
                        false,
                        true
                    ]
                },
                "text_type": {
                    "enum": [
                        "email",
                        "password",
                        "tel",
                        "text",
                        "url"
                    ],
                    "type": "string"
                },
                "textsettings": {
                    "$ref": "#/definitions/TextSettings"
                },
                "type": {
                    "description": "Controls the UI for the input device people use within Page Builder",
                    "enum": [
                        "text"
                    ],
                    "type": "string"
                },
                "validation_message": {
                    "type": "string"
                },
                "validation_pattern": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TextSettings": {
            "description": "An optional array of {@link TextSetting} items that can be defined on the property.\n\nIf included it will output a Settings icon within the text box to enable advanced editing of the Text.",
            "properties": {
                "fields": {
                    "items": {
                        "anyOf": [
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/TextProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/NumberProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/DateProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/TextAreaProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/SelectProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/RadioProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/ColorProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/CheckboxProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/SelectorProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/ImageProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/CategoryProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/ProductProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/LinkProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/SliderProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/DistributedSliderProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/ListProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/GroupListProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/TextEditorProperty"
                                    },
                                    {
                                        "$ref": "#/definitions/AdditionalTextSettings"
                                    }
                                ]
                            }
                        ],
                        "description": "An object that extends the {@link Property} with some {@link AdditionalTextSettings}\n\nGreat for adding Font Size, Font Color and Text Alignment for regular text for various states (ex. focus, hover, & active or mobile, tablet, desktop) states are defined by {@link AdditionalTextSettings.pseudoclasses}"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        }
    }
}

